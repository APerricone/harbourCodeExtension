{
    "harbour.validating": "Every time a file is opened or saved the executable is called to validate the code(Lint)",
    "harbour.compilerExecutable": "complete path of the harbour executable",
    "harbour.extraOptions": "other options to pass to harbour compiler",
    "harbour.extraIncludePaths": "Extra include paths to use during the compilation (for include)",
    "harbour.warningLevel": "Warning level",
    "harbour.decorator": "Enables the decoration of correspondents if/endif, for/next, while/endwhile, etc etc",
    "harbour.workspaceDepth": "Depth of sub-folder of workspace where looking for sources",
    "harbour.initialConfigurations": "Launch Program",
    "harbour.configurationSnippetsDesc": "Start and debug a harbour program with debug symbols",
    "harbour.configurationSnippets": "Launch ${2:Program}",
    "harbour.configurationSnippetsDesc2": "Debug a running harbour program with debug symbols specifying the process",
    "harbour.configurationSnippets2": "Attach ${2:Program}",
    "harbour.configurationSnippetsDesc3": "Debug a running harbour program with debug symbols, choosing the process",
    "harbour.configurationSnippets3": "Select process and attach",
    "harbour.launch.workspaceRoot": "Attribute 'workspaceRoot' is deprecated, use 'sourcePaths' instead",
    "harbour.launch.program": "Absolute path of executable",
    "harbour.launch.workingDir": "Working directory",
    "harbour.launch.arguments": "Arguments to pass to executable",
    "harbour.launch.stopOnEntry": "Automatically stop after launch",
    "harbour.launch.sourcePaths": "Directories where search for source files",
    "harbour.launch.terminalType": "Type of terminal to use to run the application",
    "harbour.launch.port": "Port used by debugger, It must be the same value of DBG_PORT in debugger code line 6",
    "harbour.dbgError1": "Unable to start {0} in {1}, check that all path exists",
    "harbour.dbgNoModule": "Module not found",
    "harbour.dbgNoLine": "Invalid line",
    "harbour.dbgError.all": "Stop on all errors",
    "harbour.dbgError.notSeq": "Stop only on out-of-sequence errors",
    "harbour.validation.NoExe": "Unable to start {0}, check the 'harbour.compilerExecutable' value",
    "harbour.dbgCodeCmd": "Harbour: Get debugger code",
    "harbour.task.input": "file to compile",
    "harbour.task.output": "output type",
    "harbour.task.ctype": "Type of C output",
    "harbour.task.HBMK2.input": "file to build",
    "harbour.task.HBMK2.output": "output file name",
    "harbour.task.HBMK2.extraArgs": "Free extra arguments",
    "harbour.task.HBMK2.debug": "if true includes the libray for debugging on VSCode",
    "harbour.task.HBMK2.platform": "default target platform",
    "harbour.task.HBMK2.compiler": "override C compiler",
    "harbour.task.HBMK2.setupBatch": "A batch or a shell script that set up the hbmk2 environment",
    "harbour.task.portableName": "Generate Harbour Portable Object (hrb)",
    "harbour.task.cCodeName": "Generate C file",
    "harbour.task.HBMK2.provideName": "build {0}",
    "harbour.task.HBMK2.provideName2": "build current file",
    "harbour.task.HBMK2.provideName3": "build current file for debugging",
    "harbour.task.HBMK2.errorBatch": "Unable to start setup batch",
    "harbour.task.HBMK2.setup": "setting up the enviroment...",
    "harbour.task.HBMK2.start": "Start HBMK2",
    "harbour.attach.process": "process id to connect"
}
